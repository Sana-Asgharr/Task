apply plugin: "com.android.application"
apply plugin: 'com.google.gms.google-services'
apply plugin: "com.facebook.react"
apply plugin: "org.jetbrains.kotlin.android"
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'


project.ext.react = [
    enableHermes: false,  // clean and rebuild if changing
    bundleInRelease: true
]

android {
    namespace "com.taskproject"
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion
    // compileSdk rootProject.ext.compileSdkVersion
   
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
   
    dexOptions {
       javaMaxHeapSize "3g"
    }

    defaultConfig {
        applicationId "com.taskproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        // versionCode 1
        // versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        versionCode 3
        versionName "1.0.2"
    }

    buildFeatures {
        buildConfig = true
    }

    // splits {
    //     abi {
    //         reset()
    //         enable enableSeparateBuildPerCPUArchitecture
    //         universalApk true  // If true, also generate a universal APK
    //         include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
    //     }
    // }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file(MYAPP_UPLOAD_STORE_FILE)
            storePassword MYAPP_UPLOAD_STORE_PASSWORD
            keyAlias MYAPP_UPLOAD_KEY_ALIAS
            keyPassword MYAPP_UPLOAD_KEY_PASSWORD
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}


dependencies {
    // implementation fileTree(dir: "libs", include: ["*.jar"])
    // noinspection GradleDynamicVersion
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-fs')
    // implementation "com.facebook.react:react-native:+"
    // implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"
    // implementation 'com.google.android.material:material:1.0.0'

    // debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}") {
    //   exclude group:'com.facebook.fbjni'
    // }
    // implementation ("androidx.appcompat:appcompat:1.3.1") {
    //     version {
    //         strictly '1.3.1'
    //     }
    // }

    // debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
    //     exclude group:'com.facebook.flipper'
    //     exclude group:'com.squareup.okhttp3', module:'okhttp'
    // }

    // debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}") {
    //     exclude group:'com.facebook.flipper'
    // }

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
